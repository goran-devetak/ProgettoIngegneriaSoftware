openapi: 3.0.0
info:
  version: 1.0.0
  title: TestAPI
  description: random API
  # other metadata as termsOfService, contact, license and so on
# her in the root are defined the servers 
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/GORANDEVETAK/ProgAPI/1.0.0
  - url: https://api.parking-comune.it/v1

# DEFINIZIONE EDNPOINTS
paths:
  /parcheggi:
    get: 
      description: torna la lista dei parcheggi
      responses:
        200:
          description: lista parcheggio tornata con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/parcheggi'
        404:
          description: page not found
          
  /advanced:           
    post:
      description: crea un nuovo parcheggio nel db
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: 
                  type: string
                indirizzo:
                  $ref: '#/components/schemas/address'
                num_posti:
                  type: number
                stato:
                  type: string
                  enum: [attivo, disattivo, segnalato]
      responses:
        200:
          description: nuovo parcheggio aggiunto con successo
        
  /parcheggi/{id}:
    get:
      description: torna info su specifico parcheggio
      parameters:
        - in: path
          name: id
          required: true
          description: l'id del parcheggio
          schema:
            type: integer
      responses:
        200:
          description: parcheggio tornato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/parcheggio'
            
    patch:
      description: cambia lo stato del parcheggio(attivo/disattivo/segnalato)
      parameters: 
        - in: path
          name: id
          required: true
          description: l'id del parcheggio
          schema:
            type: integer
      requestBody:
        description: nuovo stato per aggiornare quello attuale
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                stato:
                  type: string
                  enum: [attivo, disattivo, segnalato]
                  description: nuovo stato per il parcheggio
              required:
                - stato
      responses:
        200:
          description: stato del parcheggio aggiornato con successo
          content:
            applicaton/json:
              schema:
                type: object
                properties:
                  id: 
                    type: integer
                  stato:
                    type: string
                    enum: [attivo, distattivo, segnalato]
    

# DEFINIZIONE RISORSE:
components:
  schemas:
    parcheggio:
      type: object
      properties:
        nome:
          type: string
        address:
          $ref: '#/components/schemas/address'
        numPosti:
          type: number
        # togli stato e cambialo con attivo e segnalato con boolean
        stato:
          type: string
          enum: [attivo, disattivo, segnalato]
        listaPosti:
          type: array
          items:
            $ref: '#/components/schemas/posto'
        listaSegnalazioni:
          type: array
          items:
            $ref: '#/components/schemas/segnalazione'
    
    parcheggi:
      type: array
      items:
        $ref: '#/components/schemas/parcheggio'
            
    posto:
      type: object
      properties:
        stato:
          type: boolean
        categoria:
          type: string
          enum: [libero, sharing, privato]
        utilizzi:
          type: array
          items:
            $ref: '#/components/schemas/utilizzo'
        
        
    segnalazione:
      type: object
      properties:
        stato:
          type: boolean
        descrizione:
          type: string
        foto:
          type: string
        contatti:
          type: object
          properties:
            mail:
              type: string
            telefono:
              type: number
              
    address:
      type: object
      properties:
        via:
          type: string
        num:
          type: number
        comune:
          type: string
        cap:
          type: number
        long:
          type: number
        lat: 
           type: number
           
    utilizzo:
      type: object
      properties:
        idUtente:
          type: number
        timestamp:
          type: number
        servizio:
          type: string
          
          
          
          
          
          
